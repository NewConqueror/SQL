-- ÜRÜN ANALİZİ

SELECT
ITM.ITEMCODE URUNKODU, ITM.ITEMNAME URUNADI,
MIN(OD.UNITPRICE) ENDUSUKFIYAT, MAX(OD.UNITPRICE) ENYUKSEKFIYAT,
AVG(OD.UNITPRICE) ORTALAMAFIYAT,
SUM(OD.LINETOTAL) TOPLAMSATISTUTAR,
SUM(OD.AMOUNT) TOPLAMSATISMIKTAR

FROM 
ORDERDETAILS OD
INNER JOIN ORDERS O ON OD.ORDERID= O.ID
INNER JOIN ITEMS ITM ON OD.ITEMID= ITM.ID

GROUP BY ITM.ITEMCODE, ITM.ITEMNAME

/*	bazen bu işler joinle yapılacak kadar kolay olmayabilir ve bizim burada
	her bir malzeme için tek tek hesaplamamız gereken durumlar olabilir
	yani bunu fonksiyonlar ile yapmamız gerekebilir
*/ 

/* bu SUBQUERY yöntemi de var */
SELECT ITM.ID,ITM.ITEMCODE URUNKODU, ITM.ITEMNAME URUNADI

(SELECT MIN(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ITEMID=ITM.ID) AS ENDUSUKFIYAT
(SELECT MAX(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ITEMID=ITM.ID) AS ENYUKSEKFIYAT

FROM ITEMS ITM

/* fonksiyon olsa nasıl olurdu */

CREATE FUNCTION DBO.GET_ITEM_MINPRICE(@ITEMID AS INT)
RETURNS FLOAT
AS

BEGIN 

	DECLARE @RESULT AS FLOAT
	SELECT @RESULT = MIN(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ITEMID=@ITEMID
	RETURN @RESULT
	/* değişkeni bir datasetten dönen bir değere atıyoruz */
END

SELECT DBO.GET_ITEM_MINPRICE(84) /* çalışıyor sıkıntı yok */

CREATE FUNCTION DBO.GET_ITEM_MAXPRICE(@ITEMID AS INT)
RETURNS FLOAT
AS

BEGIN 

	DECLARE @RESULT AS FLOAT
	SELECT @RESULT = MAX(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ITEMID=@ITEMID
	RETURN @RESULT

END


CREATE FUNCTION DBO.GET_ITEM_AVGPRICE(@ITEMID AS INT)
RETURNS FLOAT
AS

BEGIN 

	DECLARE @RESULT AS FLOAT
	SELECT @RESULT = AVG(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ITEMID=@ITEMID
	RETURN @RESULT

END


CREATE FUNCTION DBO.GET_ITEM_TOTALSALE(@ITEMID AS INT)
RETURNS FLOAT
AS

BEGIN 

	DECLARE @RESULT AS FLOAT
	SELECT @RESULT = SUM(LINETOTAL) FROM ORDERDETAILS OD WHERE OD.ITEMID=@ITEMID
	RETURN @RESULT

END


SELECT TOP 10
ITM.ID, ITM.ITEMCODE URUNKODU, ITM.ITEMNAME URUNADI,

DBO.GET_ITEM_MINPRICE(ITM.ID) AS ENDUSUKFIYAT,
DBO.GET_ITEM_MAXPRICE(ITM.ID) AS ENDUSUKFIYAT

FROM ITEMS ITM

/* ÇOK YAVAŞ çalışıyor niye bu kadar yavaş
   ETRADEILERI nın içinde order details içinde indekse baktığında index yok
   lıne total ı ıtemıd ye göre aldırıyon o zaman oraya bir ındex koymak lazım
   git orderdetails e bir ıtemıd ye index koy
   linetotal amount unıtprıce ı da include et istatistikleri de güncelle
*/

UPDATE STATISTICS ORDERDETAILS 
/* ekledik güncelledik şimdi sorgu performansına bakalım */


SELECT TOP 10
ITM.ID, ITM.ITEMCODE URUNKODU, ITM.ITEMNAME URUNADI,

DBO.GET_ITEM_MINPRICE(ITM.ID) AS ENDUSUKFIYAT,
DBO.GET_ITEM_MAXPRICE(ITM.ID) AS ENDUSUKFIYAT

FROM ITEMS ITM

/* hızlı bir şekilde getirdi diğerlerini de ekleyek */


SELECT TOP 10
ITM.ID, ITM.ITEMCODE URUNKODU, ITM.ITEMNAME URUNADI,

DBO.GET_ITEM_MINPRICE(ITM.ID) AS ENDUSUKFIYAT,
DBO.GET_ITEM_MAXPRICE(ITM.ID) AS ENDUSUKFIYAT,
DBO.GET_ITEM_AVGPRICE(ITM.ID) AS ORTALAMAFIYAT,
DBO.GET_ITEM_TOTALSALE(ITM.ID) AS TOPLAMSATIS,

FROM ITEMS ITM

/*  burdakiler satır satır çalıştığı için joine göre bir tık daha yavaş ama doğru indexi verirsen
	sıkıntı olmaz malzeme tablosunu bilsen yeter kodun okunurluğu arttı
